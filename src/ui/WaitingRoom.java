package ui;

import game.Player;
import game.PlayerList;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

// waiting room page
public class WaitingRoom {
  private JPanel waitingRoomPanel;
  private JPanel Red;
  private JPanel Blue;
  private JLabel redTitle;
  private JLabel blueTitle;
  private JButton selectRedDetective;
  private JButton selectBlueDetective;
  private JList redDetectives;
  private JList blueDetectives;
  private JButton selectRedSpymaster;
  private JButton selectBlueSpymaster;
  private JButton startGameButton;
  private JLabel gameIdLabel;
  private JLabel unassignedList;
  private JLabel redSpymaster;
  private JLabel blueSpymaster;

  public JPanel getWaitingRoomPanel() {
    return waitingRoomPanel;
  }

  public void setGameId(int gameId) {
    gameIdLabel.setText(String.format("%s%d", gameIdLabel.getText(), gameId));
  }

  // allows update to player list and display the list accordingly
  public void setPlayerList(PlayerList playerList) {
    Player target = playerList.getBlueSpymaster();
    blueSpymaster.setText("Spymaster: " + (target == null ? "" : target.getUsername()));
    target = playerList.getRedSpymaster();
    redSpymaster.setText("Spymaster: " + (target == null ? "" : target.getUsername()));
    StringBuilder unassignedText = new StringBuilder("Unassigned users: ");
    playerList.getUnassigned().forEach((p) -> unassignedText.append(p.getUsername()).append(", "));
    unassignedList.setText(unassignedText.toString());

    DefaultListModel<String> blueDetectiveList = (DefaultListModel) (blueDetectives.getModel());
    DefaultListModel<String> redDetectiveList = (DefaultListModel) (redDetectives.getModel());
    redDetectiveList.clear();
    blueDetectiveList.clear();
    playerList.getBlueDetectives().forEach((p) -> blueDetectiveList.addElement(p.getUsername()));
    playerList.getRedDetectives().forEach((p) -> redDetectiveList.addElement(p.getUsername()));
  }

  public JButton getSelectRedDetective() {
    return selectRedDetective;
  }

  public JButton getSelectBlueDetective() {
    return selectBlueDetective;
  }

  public JButton getSelectRedSpymaster() {
    return selectRedSpymaster;
  }

  public JButton getSelectBlueSpymaster() {
    return selectBlueSpymaster;
  }

  public JButton getStartGameButton() {
    return startGameButton;
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    waitingRoomPanel = new JPanel();
    waitingRoomPanel.setLayout(new GridBagLayout());
    waitingRoomPanel.setMinimumSize(new Dimension(800, 800));
    waitingRoomPanel.setPreferredSize(new Dimension(800, 400));
    Blue = new JPanel();
    Blue.setLayout(new GridBagLayout());
    Blue.setBackground(new Color(-9994047));
    Blue.setMinimumSize(new Dimension(350, 400));
    Blue.setPreferredSize(new Dimension(400, 400));
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.BOTH;
    waitingRoomPanel.add(Blue, gbc);
    blueTitle = new JLabel();
    Font blueTitleFont = this.$$$getFont$$$(null, -1, 64, blueTitle.getFont());
    if (blueTitleFont != null) blueTitle.setFont(blueTitleFont);
    blueTitle.setText("Team Blue");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.gridwidth = 5;
    gbc.anchor = GridBagConstraints.NORTHWEST;
    Blue.add(blueTitle, gbc);
    blueSpymaster = new JLabel();
    Font blueSpymasterFont = this.$$$getFont$$$(null, -1, 20, blueSpymaster.getFont());
    if (blueSpymasterFont != null) blueSpymaster.setFont(blueSpymasterFont);
    blueSpymaster.setText("Spymaster:");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.gridwidth = 4;
    gbc.anchor = GridBagConstraints.WEST;
    Blue.add(blueSpymaster, gbc);
    final JLabel label1 = new JLabel();
    label1.setFocusable(true);
    Font label1Font = this.$$$getFont$$$(null, -1, 20, label1.getFont());
    if (label1Font != null) label1.setFont(label1Font);
    label1.setText("Detectives");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 5;
    gbc.gridwidth = 3;
    gbc.anchor = GridBagConstraints.WEST;
    Blue.add(label1, gbc);
    selectBlueDetective = new JButton();
    selectBlueDetective.setText("Select Role");
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 5;
    gbc.anchor = GridBagConstraints.EAST;
    Blue.add(selectBlueDetective, gbc);
    blueDetectives = new JList();
    blueDetectives.setBackground(new Color(-9994047));
    final DefaultListModel defaultListModel1 = new DefaultListModel();
    defaultListModel1.addElement("None");
    blueDetectives.setModel(defaultListModel1);
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 6;
    gbc.gridwidth = 4;
    gbc.fill = GridBagConstraints.BOTH;
    Blue.add(blueDetectives, gbc);
    final JLabel label2 = new JLabel();
    label2.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 4;
    gbc.anchor = GridBagConstraints.WEST;
    Blue.add(label2, gbc);
    final JSeparator separator1 = new JSeparator();
    separator1.setForeground(new Color(-9994047));
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.gridwidth = 4;
    gbc.fill = GridBagConstraints.BOTH;
    gbc.ipady = 50;
    Blue.add(separator1, gbc);
    final JSeparator separator2 = new JSeparator();
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 4;
    gbc.gridwidth = 3;
    gbc.fill = GridBagConstraints.BOTH;
    gbc.ipady = 30;
    Blue.add(separator2, gbc);
    selectBlueSpymaster = new JButton();
    selectBlueSpymaster.setText("Select Role");
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 3;
    gbc.anchor = GridBagConstraints.EAST;
    Blue.add(selectBlueSpymaster, gbc);
    final JPanel spacer1 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.ipadx = 20;
    waitingRoomPanel.add(spacer1, gbc);
    Red = new JPanel();
    Red.setLayout(new GridBagLayout());
    Red.setBackground(new Color(-3119001));
    Red.setMinimumSize(new Dimension(350, 400));
    Red.setPreferredSize(new Dimension(400, 400));
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.fill = GridBagConstraints.BOTH;
    waitingRoomPanel.add(Red, gbc);
    redSpymaster = new JLabel();
    Font redSpymasterFont = this.$$$getFont$$$(null, -1, 20, redSpymaster.getFont());
    if (redSpymasterFont != null) redSpymaster.setFont(redSpymasterFont);
    redSpymaster.setText("Spymaster:");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.gridwidth = 3;
    gbc.anchor = GridBagConstraints.WEST;
    Red.add(redSpymaster, gbc);
    final JLabel label3 = new JLabel();
    Font label3Font = this.$$$getFont$$$(null, -1, 20, label3.getFont());
    if (label3Font != null) label3.setFont(label3Font);
    label3.setText("Detectives");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 6;
    gbc.gridwidth = 2;
    gbc.anchor = GridBagConstraints.WEST;
    Red.add(label3, gbc);
    selectRedDetective = new JButton();
    selectRedDetective.setText("Select Role");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 6;
    gbc.gridwidth = 2;
    gbc.anchor = GridBagConstraints.EAST;
    Red.add(selectRedDetective, gbc);
    redDetectives = new JList();
    redDetectives.setBackground(new Color(-3119001));
    final DefaultListModel defaultListModel2 = new DefaultListModel();
    defaultListModel2.addElement("None");
    redDetectives.setModel(defaultListModel2);
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 7;
    gbc.gridwidth = 4;
    gbc.fill = GridBagConstraints.BOTH;
    Red.add(redDetectives, gbc);
    redTitle = new JLabel();
    redTitle.setAlignmentY(0.5f);
    Font redTitleFont = this.$$$getFont$$$(null, -1, 64, redTitle.getFont());
    if (redTitleFont != null) redTitle.setFont(redTitleFont);
    redTitle.setText("Team Red");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.gridwidth = 4;
    gbc.anchor = GridBagConstraints.NORTH;
    Red.add(redTitle, gbc);
    final JLabel label4 = new JLabel();
    label4.setText("");
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 5;
    gbc.anchor = GridBagConstraints.WEST;
    Red.add(label4, gbc);
    final JSeparator separator3 = new JSeparator();
    separator3.setForeground(new Color(-3119001));
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.gridwidth = 3;
    gbc.fill = GridBagConstraints.BOTH;
    gbc.ipady = 50;
    Red.add(separator3, gbc);
    final JSeparator separator4 = new JSeparator();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 4;
    gbc.gridwidth = 3;
    gbc.fill = GridBagConstraints.BOTH;
    gbc.ipady = 30;
    Red.add(separator4, gbc);
    selectRedSpymaster = new JButton();
    selectRedSpymaster.setText("Select Role");
    gbc = new GridBagConstraints();
    gbc.gridx = 3;
    gbc.gridy = 3;
    gbc.anchor = GridBagConstraints.EAST;
    Red.add(selectRedSpymaster, gbc);
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new GridBagLayout());
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.gridwidth = 3;
    gbc.fill = GridBagConstraints.BOTH;
    waitingRoomPanel.add(panel1, gbc);
    startGameButton = new JButton();
    startGameButton.setText("Start Game");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(10, 0, 0, 0);
    panel1.add(startGameButton, gbc);
    final JPanel spacer2 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    panel1.add(spacer2, gbc);
    final JPanel spacer3 = new JPanel();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.fill = GridBagConstraints.VERTICAL;
    panel1.add(spacer3, gbc);
    gameIdLabel = new JLabel();
    Font gameIdLabelFont = this.$$$getFont$$$(null, -1, 24, gameIdLabel.getFont());
    if (gameIdLabelFont != null) gameIdLabel.setFont(gameIdLabelFont);
    gameIdLabel.setText("Invite your friends to this game with ID: ");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.gridwidth = 3;
    gbc.ipady = 10;
    waitingRoomPanel.add(gameIdLabel, gbc);
    unassignedList = new JLabel();
    unassignedList.setText("Unassigned users: ");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.gridwidth = 3;
    gbc.insets = new Insets(0, 0, 10, 0);
    waitingRoomPanel.add(unassignedList, gbc);
  }

  /**
   * @noinspection ALL
   */
  private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
    if (currentFont == null) return null;
    String resultName;
    if (fontName == null) {
      resultName = currentFont.getName();
    } else {
      Font testFont = new Font(fontName, Font.PLAIN, 10);
      if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
        resultName = fontName;
      } else {
        resultName = currentFont.getName();
      }
    }
    Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
    Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
    return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() {
    return waitingRoomPanel;
  }

}
